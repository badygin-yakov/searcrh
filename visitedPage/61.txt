tm
feed
хабрахабр
geektimes
тостер
мо
круг
фриланс
хабрахабр
публикац
пользовател
хаб
компан
песочниц
войт
регистрац
igmat
сегодн
в
tdd
управлен
javascript
из
песочниц
вы
попа
на
что
tdd
нельз
назва
всегд
ест
какое-т
содержан
bступлен
tест
и
ест
hемн
истор
hебольш
викторин
oбзор
tdd
tест
эт
формализова
требован
tdd
поощря
хорош
архитектур
tdd
эконом
врем
tест
эт
лучш
документац
hемн
вывод
b
же
hескольк
пример
hемн
про
план
bступлен
перв
шест
лет
сво
карьер
я
фриланс
и
участвова
в
начальн
этап
жизн
мелк
в
эт
проект
не
был
ни
в
эт
услов
ты
обяза
реализова
фич
на
поскольк
требован
рынк
постоя
тест
устарева
до
как
ты
их
и
даж
эт
тест
можн
созда
есл
ты
увер
в
что
имен
ты
хочеш
а
эт
не
всегд
заним
ты
вполн
можеш
не
знат
как
долж
быт
конечн
и
даж
достиг
ты
не
можеш
быт
что
завтр
рынок
с
ним
и
не
в
существ
бизнес
причин
для
эконом
времен
на
наш
отрасл
эт
не
тольк
окол
двух
лет
назад
я
устро
в
достаточн
больш
аутсорсинг
котор
обслужива
клиент
люб
во
врем
разговор
на
я
что
практическ
все
согласн
с
что
юнит-тестирован
и
tdd
эт
сво
род
best
но
во
всех
проект
эт
в
котор
я
не
был
и
не
я
принима
так
конечн
у
нас
ест
проект
с
отличн
покрыт
но
он
и
довольн
сильн
так
в
же
поч
все
что
tdd
эт
но
никт
не
хочет
ег
может
tdd
в
нет
никак
выгод
для
и
может
прост
разработчик
но
эт
не
проблем
в
сам
я
что
звуч
эт
но
я
попыта
эт
tест
и
ест
исход
из
эт
исследован
наименьш
общ
во
все
экосистем
принадлеж
имен
инструмент
для
так
был
в
2016
и
2017
я
не
бол
ран
но
эт
уж
не
очен
hемн
истор
в
2008
год
вышел
один
из
перв
фреймворк
для
тестирован
в
2010
появ
в
2011
перв
релиз
котор
я
был
в
для
в
2010
зарелиз
ember
появ
в
react
и
так
во
врем
написан
эт
стат
не
был
созда
ни
один
js
во
всяк
за
этот
же
период
времен
мы
увидел
и
паден
пот
посл
чег
осозна
всю
мощ
npm
scripts
и
вышел
в
свет
стабильн
релиз
поменя
за
последн
10
кром
hебольш
викторин
дава
провер
ваш
что
эт
за
var
hiddenbox
export
class
hero
function
return
jquery
react
я
что
все
ваш
ответ
был
но
что
на
эт
фреймворк
для
var
assert
return
-1
when
the
value
is
not
const
sum
1
2
to
equal
function
var
start
-
let
when2isaddedto2expect4
mocha
jest
tape
тест
для
вы
могл
угада
некотор
из
в
он
все
очен
что
даж
при
смен
мал
что
у
нас
как
8
лет
опыт
юнит-тестирован
в
мир
но
мы
вед
прост
адаптирова
уж
существ
на
тот
как
мы
ег
появ
намн
есл
взят
релиз
test
anything
protocol
как
точк
то
мы
использу
текущ
подход
чем
я
tdd
ненамн
есл
не
эт
привод
нас
к
что
мы
уж
мож
объективн
оцен
все
плюс
и
oбзор
tdd
дава
что
так
разработк
через
тестирован
test-driven
техник
разработк
программн
котор
основыва
на
повторен
очен
коротк
цикл
снача
пишет
покрыва
жела
зат
пишет
котор
позвол
пройт
и
под
конец
провод
рефакторинг
нов
код
к
соответств
википед
но
что
эт
нам
tест
эт
формализова
требован
эт
правд
тольк
tdd
как
практик
был
кент
бек
в
1999
в
то
врем
как
agile
manifesto
был
прин
тольк
2
год
спуст
я
долж
эт
что
бы
вы
что
tdd
род
в
каскадн
модел
и
этот
факт
определя
наибол
благоприятн
услов
и
для
котор
он
и
был
что
tdd
будет
лучш
всег
работа
имен
в
так
так
есл
вы
работа
в
требован
вы
полност
их
он
стабильн
и
не
будут
част
вы
может
создава
как
формализац
но
что
бы
использова
существ
тест
так
же
необходим
выполнен
и
след
пункт
в
тест
нет
он
и
он
покрыва
почт
все
сценар
использован
пута
с
покрыт
так
что
эт
формализова
правд
тольк
когд
эт
требован
существ
до
нача
сам
как
в
ил
проект
где
эт
учен
и
в
услов
эт
будет
работа
и
с
есл
что-нибуд
по
тип
bdd
будет
но
эт
уж
совс
друг
tdd
поощря
хорош
архитектур
и
опя
эт
правд
тольк
tdd
поощря
что
но
недостаточн
для
хорош
качеств
архитектур
завис
от
опытн
разработчик
способн
создава
отличн
несмотр
на
использован
ил
неиспользован
с
друг
слаб
разработчик
будут
создава
низкокачествен
покрыт
низкокачествен
пот
что
создан
хорош
тест
эт
сво
род
как
и
сам
тест
как
чем
никак
этот
тест
никак
не
продвинет
вас
на
пут
к
хорош
дизайн
import
testbed
from
import
uploaderservice
from
be
что
он
нич
не
обрат
мы
использова
15
строк
чтоб
нич
не
но
и
этот
тест
не
сдела
дизайн
ваш
систем
var
iotsimulation
var
smartasset
var
buysmartasset
var
bigint
function
sell
async
var
deliverycity
var
extra
var
gasprice
const
smartasset
await
const
iotsimulation
await
const
buysmartasset
await
const
result
await
const
smartassetgeneratedid
await
await
await
const
assetobjprice
await
should
be
bigger
than
await
var
assetobj
await
should
be
onsale
position
3
in
state
enum
await
assetobj
await
should
be
pricecalculated
position
2
in
state
enum
await
const
calculatedtotalprice
await
await
assetobj
await
should
be
manualdataareentered
position
0
in
state
enum
const
balancebeforewithdrawal
await
const
gas
await
await
gasprice
const
balanceafterwithdrawal
await
var
totalgas
gas
наибольш
проблем
эт
тест
эт
изначальн
кодов
но
даж
в
так
случа
ег
можн
был
существен
даж
без
рефакторинг
уж
работа
влиян
tdd
на
итогов
архитектур
приблизительн
на
том
же
что
и
влиян
выбра
есл
не
меньш
rxjs
и
по
мо
личн
влия
существен
но
ни
ни
фреймворк
не
спасут
от
плох
код
и
неудачн
архитектурн
не
существ
серебрян
tdd
эконом
врем
а
эт
уж
завис
от
мног
дава
все
в
проект
достаточн
хорош
владеют
выбра
тестов
методолог
tdd
и
лучш
практик
и
все
понима
вышеперечислен
а
требован
прозрачн
и
к
том
команд
разработчик
понима
их
точн
так
как
и
а
менеджмент
гот
реша
все
организацион
вызва
tdd
бол
длин
процесс
ввод
нов
разработчик
в
даж
в
эт
вам
необходим
снача
инвестирова
врем
и
что
удлин
начальн
фаз
разработк
и
тольк
спуст
какое-т
врем
вы
получ
сократ
необходим
врем
на
исправлен
ошибок
и
поддержк
втор
может
быт
больш
чем
стартов
инвестиц
и
в
эт
случа
выгод
от
tdd
так
же
в
некотор
случа
вы
сможет
сэконом
врем
и
на
внедрен
нов
поскольк
тест
будут
сраз
выявля
непреднамерен
но
в
реальн
котор
очен
требован
могут
измен
и
что
был
корректн
поведен
станет
в
эт
случа
вам
необходим
переписа
тест
в
связ
с
нов
прилож
нов
котор
не
окуп
сраз
вы
даж
может
попаст
в
цикл
подобн
этот
цикл
противореч
принцип
но
след
уж
попроб
найт
в
них
значим
tест
эт
лучш
документац
он
хорош
в
но
однозначн
не
дава
взглян
на
документац
ил
как
вы
что
в
них
он
об
постро
на
пример
и
даж
бол
все
эт
пример
можн
легк
запуст
использ
а
react
так
что
вы
может
что
он
на
выход
и
что
есл
вы
что-т
конечн
там
так
же
ест
и
прост
но
эт
как
комментар
в
код
он
вам
нужн
тольк
есл
вы
что-т
не
поня
из
сам
исполня
пример
код
вот
лучш
тест
близк
к
но
container
attachedlistener
renderedname
the
name
of
the
class
for
use
in
error
if
no
render
function
is
a
failed
component
renders
twice
in
dev
no
method
found
on
the
returned
you
may
have
forgotten
to
define
no
method
found
on
the
returned
you
may
have
forgotten
to
define
эт
небольш
кусочек
из
реальн
тест
в
мы
мож
выдел
пример
код
из
container
container
остальн
эт
вручн
написа
инфраструктурн
дава
буд
пример
тест
выш
намн
мен
читабельн
чем
настоя
и
проблем
не
в
эт
конкретн
тест
я
что
реб
из
facebook
как
писа
хорош
код
и
хорош
тест
ве
этот
мусор
из
инструмент
тестирован
и
assertion
как
прост
захламля
ваш
ест
котор
называ
tape
с
минималистичн
пот
что
люб
тест
можн
использу
тольк
а
дума
в
эт
термин
эт
в
цел
хорош
практик
для
но
даж
тест
для
tape
очен
далек
до
прост
исполня
пример
но
сто
что
тест
вполн
пригодн
для
использован
в
качеств
у
них
действительн
ниж
вероятн
быт
а
наш
сознан
прост
выкидыва
когд
мы
их
есл
мы
попробу
визуализирова
во
что
превраща
тест
в
наш
то
эт
будет
выглядет
приблизительн
как
вы
эт
уж
намн
ближ
к
реальн
чем
изначальн
hемн
вывод
тест
эт
формализова
требован
есл
он
tdd
поощря
хорош
архитектур
есл
разработчик
достаточн
tdd
эконом
врем
есл
вы
ег
влож
тест
эт
лучш
документац
есл
нет
друг
исполня
пример
знач
tdd
tdd
не
он
указыва
правильн
направлен
и
поднима
важн
мы
прост
должн
переосмысл
и
измен
способ
ег
b
же
не
воспринима
tdd
как
не
воспринима
ег
даж
как
процесс
по
тип
вмест
эт
сфокусир
на
ег
реальн
сильн
предотвращен
непреднамерен
друг
слов
фиксирован
существ
поведен
как
сво
род
термин
нам
использован
пример
из
как
дума
о
юнит-тестирован
как
о
инструмент
как
линтер
ил
вы
не
будет
спрашива
у
product
разрешен
на
использован
линтер
вы
прост
будет
ег
когда-нибуд
эт
станет
реальност
и
для
когд
необходим
для
tdd
усил
будут
на
уровн
использован
тайпчекер
ил
но
до
эт
прост
минимизир
сво
создав
тест
максимальн
похож
на
исполня
пример
и
использ
их
как
текущ
baseline
состоян
ваш
я
что
эт
будет
особен
учитыв
тот
что
большинств
популярн
инструмент
спроектирова
для
друг
я
созда
один
бер
во
вниман
все
вышеописа
он
называ
базов
концепц
очен
пиш
export
function
return
a
b
b
и
прост
использ
ег
в
ваш
import
samplefn
from
export
new
конечн
очен
синтетическ
прост
для
пот
выполня
команд
baset
test
и
получа
времен
value11async
есл
значен
выполня
baset
accept
и
коммит
созда
baseline
в
ваш
все
послед
прогонк
тест
буд
сравнива
существ
baseline
со
экспортирова
из
ваш
есл
он
тест
инач
есл
требован
прост
измен
прогон
тест
и
прим
нов
этот
инструмент
оберега
вас
от
непреднамерен
при
эт
треб
минимальн
что
вам
эт
прост
написа
исполня
пример
к
том
явля
основ
хорош
hескольк
пример
использован
с
вот
этот
import
as
react
from
import
jsxfn
from
export
const
value
создаст
так
файл
как
ss
abccba
sabc
abcs
ил
с
import
interface
iresourcedictionary
const
assets
const
const
getsprite
async
await
new
return
new
export
const
sprite
этот
тест
создаст
так
hемн
про
план
я
обяза
что
этот
инструмент
на
очен
ран
стад
разработк
и
вперед
очен
мног
mode
tap
compatibility
git
acceptance
strategy
vs
code
extension
как
24
тольк
окол
от
запланирова
был
но
вся
базов
функциональн
уж
так
что
может
попробова
поигра
с
может
быт
вам
даж
кто
javascript
tdd
unit-testing
tools
js
tools
testing
tools
добав
метк
пометьт
публикац
сво
метк
метк
необходим
разделя
андрон
задач
трех
тел
сохран
adblock
похит
этот
но
баннер
не
зуб
отрастут
подробн
реклам
чита
сейчас
поч
в
2018
год
я
использ
метод
котор
уж
30
лет
19
firefox
мы
71
как
пользовател
учат
яндекс
предупрежда
о
телефон
спам
9k
96
tdd
2
поч
означа
8
достигш
автоматизирова
диагностик
в
продакшн
0
adblock
похит
этот
но
баннер
не
зуб
отрастут
подробн
реклам
28
2
выбер
рекомендац
для
отправк
указа
тольк
блог
орфографическ
ошибк
пунктуацион
ошибк
отступ
текст-простын
коротк
предложен
смайлик
мног
форматирован
картинк
ссылк
оформлен
код
рекламн
характер
отправ
нарушен
опиш
сут
нарушен
отправ
карм
рейтинг
0
подписчик
игор
чулинд
igmat
пользовател
подел
публикац
похож
публикац
21
ма
2013
в
автоматизирова
тестирован
веб-приложен
unit
testing
framework
selenium
webdriver
част
selenium
api
wrapper
webelement
101
7
17
ма
2013
в
автоматизирова
тестирован
веб-приложен
unit
testing
framework
selenium
webdriver
част
selenium
api
wrapper
browser
162
3
15
ма
2013
в
автоматизирова
тестирован
веб-приложен
unit
testing
framework
selenium
webdriver
част
введен
139
15
ваканс
frontend
developer
mywed
рязан
полн
рабоч
ден
от
60
000
до
70
000
front-end
разработчик
на
vuejs
остр
сокровищ
полн
рабоч
ден
от
90
000
до
128
000
разработчик
sharepoint
stecpoint
полн
рабоч
ден
от
120
000
ios
developer
media
target
llc
москв
полн
рабоч
ден
до
180
000
программист-разработчик
eme
москв
полн
рабоч
ден
от
70
000
до
100
000
все
ваканс
размест
ваканс
adblock
похит
этот
но
баннер
не
зуб
отрастут
подробн
реклам
комментар
2
powerman
в
0
я
не
что
автоматизац
результат
тест
хорош
я
немн
с
эт
экспериментирова
когда-т
по
мо
есл
результат
тест
не
человек
вручн
изначальн
копир
из
вывод
провал
в
тест
проника
нема
некорректн
пыта
по
diff-ам
правильн
ли
измен
вон
те
8
результат
из
42
треб
слишк
мног
и
обычн
заканчива
принят
изменен
существ
когд
так
подход
не
прост
а
чут
ли
не
единствен
возможн
дан
слишк
мног
их
практическ
невозможн
предсказа
и
зада
но
эт
а
не
но
во
всех
проект
эт
в
котор
я
не
был
и
не
я
принима
так
конечн
ег
принима
соглас
работа
на
эт
проект
и
соглас
и
писа
сво
код
без
тест
в
я
в
эт
отношен
практик
есл
мне
не
дают
нормальн
организова
на
проект
и
фикс
архитектурн
проблем
я
прост
отказыва
занима
в
так
услов
пот
что
есл
архитектурн
в
проект
допуска
возможн
race
и
в
примерн
эт
мест
происход
фигн
то
на
расследован
кажд
так
конкретн
случ
предмет
а
не
баг
ли
эт
ил
прост
архитектурн
особен
нема
зачаст
и
пуст
врем
сво
жизн
на
так
бессмыслен
деятельн
трат
кто-т
кто
на
эт
у
нас
как
8
лет
опыт
юнит-тестирован
в
мир
поскольк
вы
осозна
сдела
заголовок
стат
как
я
тож
проигнорир
что
стат
про
js
и
прокомментир
в
например
на
опыт
так
что
эт
формализова
правд
тольк
когд
эт
требован
существ
до
нача
сам
как
в
ил
проект
где
эт
учен
и
эт
не
совс
ест
упомянут
вам
но
горазд
важн
что
требован
существ
на
разн
есл
в
проект
нужн
функц
складыва
два
числ
требован
не
будут
а
есл
измен
скор
всег
эт
будет
что
стар
функц
над
и
написа
при
правильн
определен
небольш
отдельн
слаб
связа
с
требован
к
ним
будут
составля
сам
и
будут
редк
изменя
из-з
изменен
требован
бизнес
чащ
требован
бизнес
прост
будет
дела
некотор
из
эт
компонент
вмест
их
бесконечн
изменен
до
полн
неузнаваем
относительн
начальн
так
компонент
будут
прост
выбрасыва
и
заменя
а
для
тестирован
высокоуровнев
требован
бизнес
ест
и
за
реальн
высок
уровн
так
тест
тож
получа
бол
tdd
эконом
врем
а
эт
уж
завис
от
мног
ве
раздел
не
очен
фактор
зде
тольк
будет
ли
код
есл
эт
одноразов
скрипт
ил
прост
прототип
тест
врем
не
но
практическ
во
всех
остальн
случа
начальн
написан
код
ег
перв
реальн
буд
то
вследств
найден
баг
ил
занима
незначительн
процент
общ
времен
разработк
проект
и
в
эт
услов
тест
всегд
эконом
и
чтоб
от
тест
был
польз
над
умет
их
но
эт
каса
и
и
даж
готовк
сут
текущ
пробл
с
тест
в
счита
что
люб
программист
автоматическ
умеет
писа
тест
а
эт
не
эт
над
так
же
как
над
уч
писа
под
на
бэк
ил
быстр
ил
исполня
пример
код
вот
лучш
тест
близк
к
но
в
go
из
коробк
поддержива
котор
явля
исполня
пример
func
дума
о
юнит-тестирован
как
о
инструмент
как
линтер
ил
эт
очен
опя
в
go
эт
так
и
реализова
тестирован
и
даж
линтер
запуска
одн
доступн
сраз
посл
установк
сам
плюс
генерац
документац
из
с
тем
сам
исполня
пример
остальн
эт
вручн
написа
инфраструктурн
дава
буд
пример
тест
выш
намн
мен
читабельн
в
go
эт
проблем
обычн
реша
написан
тест
в
табличн
эт
тож
не
серебрян
но
большинств
тест
в
так
вид
намн
прощ
и
писа
и
пот
что
инфраструктурн
код
полност
от
входн
и
выходн
значен
hемн
вывод
тест
эт
формализова
требован
есл
он
tdd
поощря
хорош
архитектур
есл
разработчик
достаточн
tdd
эконом
врем
есл
вы
ег
влож
тест
эт
лучш
документац
есл
нет
друг
исполня
пример
правильн
декомпозиц
на
небольш
модул
обеспеч
эт
пок
не
существ
котор
позвол
бы
неквалифицирова
разработчик
создава
качествен
и
вряд
ли
он
когда-нибуд
тест
эконом
врем
при
что
проект
над
развива
и
прост
оформля
эт
пример
код
чтоб
их
можн
был
автоматическ
выполня
как
тест
как
сдела
в
zloddey
в
0
чувак
approval
в
цел
подход
неплох
как
дополнен
к
остальн
но
сво
ограничен
ест
и
у
сто
тольк
просоч
недетерминирован
в
тестируем
код
и
точн
так
же
обкладыва
код
тест
костыл
для
приведен
результат
к
приемлем
простеш
как
протестирова
банальн
с
классическ
юнит-тест
мы
к
сдела
проверк
на
что
результат
леж
межд
a
и
а
такж
что
при
нескольк
вызов
подряд
получа
разн
эт
тест
будут
работа
а
вариант
результат
один
зат
сравнива
след
результат
с
уж
не
будет
пот
что
честн
ранд
долж
возвраща
совс
друг
но
стат
постав
есл
разработчик
будут
умет
использова
разн
тип
автотест
наибол
подходя
эт
будет
тольк
полноправн
пользовател
могут
оставля
что
обсужда
сейчас
вчер
недел
игр
snake
в
93
байт
21
фреймворк
для
бессерверн
приложен
в
aws
6
для
чег
программист
continuous
integration
и
с
чег
начина
42
хакер
атакова
пользовател
криптобирж
poloniex
с
помощ
поддельн
мобильн
приложен
667
2
как
пользовател
учат
яндекс
предупрежда
о
телефон
спам
9k
96
дива
как
я
работа
директор
по
продукт
на
полн
132
как
пользовател
учат
яндекс
предупрежда
о
телефон
спам
9k
96
firefox
мы
71
для
чег
программист
continuous
integration
и
с
чег
начина
42
применен
сверточн
нейрон
сет
для
задач
nlp
21
как
специалист
google
adwords
помогл
мне
выброс
150
000
грн
за
месяц
ил
поч
я
больш
не
49k
251
пор
дела
след
шаг
220
поч
я
не
подписыва
соглашен
о
неконкуренц
166
дива
как
я
работа
директор
по
продукт
на
полн
132
осторожн
с
фингерпринтинг
текст
непечата
символ
93
сам
чита
сутк
недел
месяц
поч
в
2018
год
я
использ
метод
котор
уж
30
лет
56
19
истор
про
блокчейн
и
немн
про
биткойн
65
18
для
чег
программист
continuous
integration
и
с
чег
начина
220
42
как
пользовател
учат
яндекс
предупрежда
о
телефон
спам
9k
18
96
firefox
мы
15
71
как
специалист
google
adwords
помогл
мне
выброс
150
000
грн
за
месяц
ил
поч
я
больш
не
49k
123
251
как
я
за
9
месяц
преврат
из
неофит
в
разработчик
по
без
отрыв
от
основн
работ
38k
305
38
поч
я
не
подписыва
соглашен
о
неконкуренц
84
166
конференц
defcon
я
сбива
назойлив
дрон
соседск
майкл
робинсон
135
38
пор
дела
след
шаг
83
220
как
уж
снов
не
получ
телефон
люб
красотк
в
ил
интересн
особен
163k
260
101
мы
нашл
крупн
котор
5
лет
не
занима
информацион
и
он
жив
79k
119
97
как
red
hat
уб
сво
главн
продукт
и
стал
многомиллиардн
корпорац
105
68
дискредитац
специалист
ил
современ
собеседован
153
675
раскрыт
5
миллион
ссылок
в
приватн
чат
telegram
и
возможн
редактирован
люб
стат
58k
172
66
интересн
публикац
хабрахабр
geektimes
обнаруж
уязвим
в
панел
управлен
хостинг
vesta
cp
222
3
0
роскомнадзор
продолжа
уничтожа
наста
очеред
google
gt
4k
4
12
имитац
левитац
вод
на
ардуин
gt
14
16
охот
на
dofoil
с
помощ
windows
defender
atp
442
2
1
лиша
гарант
за
оторва
наклейк
ил
пломб
незакон
gt
7
1
tdd
28
2
журналист
нашл
в
москв
11
пункт
обм
криптовалют
и
4
биткоин-банкомат
3
2
подруж
java
и
26
4
нов
апдейт
ios
сдела
неоригинальн
экра
неработоспособн
gt
7
37
apple
застав
заплат
млн
патентн
тролл
gt
3
6
adblock
похит
этот
но
баннер
не
зуб
отрастут
подробн
реклам
аккаунт
войт
регистрац
раздел
публикац
хаб
компан
пользовател
песочниц
информац
прав
помощ
документац
соглашен
конфиденциальн
услуг
реклам
тариф
контент
семинар
приложен
2006
2018
о
сайт
служб
поддержк
мобильн
верс
